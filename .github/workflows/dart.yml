name: Build and Release

on:
  workflow_dispatch:

jobs:
  build-android:
    name: üåµ Android Build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Install Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.22.1'
    - name: Install dependencies
      run: flutter pub get
    - name: Build Release APK
      run: flutter build apk --release
    - name: Build Debug APK
      run: flutter build apk --debug
    - name: Build AppBundle
      run: flutter build appbundle --release
    - name: Upload Release APK
      uses: actions/upload-artifact@v4
      with:
        name: release-apk
        path: build/app/outputs/flutter-apk/app-release.apk
    - name: Upload Debug APK
      uses: actions/upload-artifact@v4
      with:
        name: debug-apk
        path: build/app/outputs/flutter-apk/app-debug.apk
    - name: Upload AppBundle
      uses: actions/upload-artifact@v4
      with:
        name: appbundle
        path: build/app/outputs/bundle/release/app-release.aab

  build-ios:
    name: üçé iOS Build
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3
    - uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
        architecture: x64
    - run: flutter pub get
    - run: pod repo update
      working-directory: ios
    - run: flutter build ios --release --no-codesign
    - run: mkdir Payload
      working-directory: build/ios/iphoneos
    - run: mv Runner.app/ Payload
      working-directory: build/ios/iphoneos
    - name: Zip output
      run: zip -qq -r -9 FlutterIpaExport.ipa Payload
      working-directory: build/ios/iphoneos

  tag-release:
    name: üìå Tag and Upload Release
    runs-on: ubuntu-latest
    needs: [build-android, build-ios]  # Ensure this job runs after both builds

    steps:
    - uses: actions/checkout@v3
    - name: Create Git Tag
      id: create_tag
      run: |
        git fetch --tags
        current_tag=$(git tag --list "v*" | sort -V | tail -n 1)
        if [ -z "$current_tag" ]; then
          new_tag="v1.0.0"
        else
          version=${current_tag#v}
          IFS='.' read -r -a version_parts <<< "$version"
          patch=$((version_parts[2] + 1))
          new_tag="v${version_parts[0]}.${version_parts[1]}.$patch"
        fi
        git tag $new_tag
        git push origin $new_tag
        echo "TAG=$new_tag" >> $GITHUB_ENV

    - name: Upload Android Release APK to GitHub Releases
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: build/app/outputs/flutter-apk/app-release.apk
        tag: ${{ env.TAG }}
        overwrite: true
        body: "Release APK for ${{ env.TAG }}"

    - name: Upload Android AppBundle to GitHub Releases
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: build/app/outputs/bundle/release/app-release.aab
        tag: ${{ env.TAG }}
        overwrite: true
        body: "AppBundle for ${{ env.TAG }}"

    - name: Upload iOS IPA to GitHub Releases
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: build/ios/iphoneos/FlutterIpaExport.ipa
        tag: ${{ env.TAG }}
        overwrite: true
        body: "iOS IPA for ${{ env.TAG }}"
